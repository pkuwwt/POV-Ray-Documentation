<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
<title>Fermodellismo - Ferromodellismo - Modellismo ferroviario con POV-Ray</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta http-equiv="language" content="it">
<meta name="robots" content="index">
<meta name="robots" content="follow">
<meta name="Author" content="Friedrich A. Lohmueller">
<meta name="copyright" content="Copyright 2012, Friedrich A. Lohmueller - tutti diritti riservati - all rights reserved worldwide">
<meta name="description" content="Oggetti per POV-Ray">
<meta name="keywords" content="POV, POVRAY, POV-Ray, Raytracing, 3D-Grafica, 3D Graphica, Oggetti POV-Ray - Oggetti pronto per l'uso">
<link rel="stylesheet" type="text/css" href="../lo1style.css">
<script language="JavaScript">
<!--
 if(top.frames.length > 0)
 top.location.href=self.location;
//-->
</script>
<SCRIPT LANGUAGE=JavaScript>
<!--
function ShowImage(ImageHtml) {
 New=window.open(ImageHtml, "PictureWin", "status=0,scrollbars=0,resizable=1,width=650,height=507");
 New.focus();  }
//-->
</SCRIPT>
</head>

<body bgcolor="#d8d8d0" text="#505030" link="#006677" vlink="#445566" alink="#cc0055">

<table width="100%" border="0"><tr>
 <td valign="top"><h6><nobr>Descrizioni ed esempi </nobr> per il <nobr> raytracer POV-Ray </nobr>
     <nobr>di Friedrich A. Lohm&uuml;ller</nobr>
 <hr size="3">
 <div align="center">
      <font size="5"><b>Ferromodellismo - Modellismo ferroviario con POV-Ray</b</font></div>
 </td></h6>
 <td align="right">
        <a href="model_720e.htm"><font size="2">English </font><img src="flag_uk.gif" border="0" width="22" height="15" alt="English" titel="English"</a>
        <a href="model_720e.htm"><img src="flag_usa.gif" border="0" width="22" height="15" alt="English" titel="English"></a><br>
        <a href="model_720f.htm"><font size="2">Fran&ccedil;ais</font></a>
        <a href="model_720f.htm"><img src="flag_fra.gif" alt="fran&ccedil;ais" title="fran&ccedil;ais"align="bottom" width="22" height="15" border="0"></a><br>
        <a href="model_720d.htm"><font size="2">Deutsch</font></a>
        <a href="model_720d.htm"><img src="flag_ger.gif" alt="Deutsch" title="Deutsch" align="bottom" width="22" height="15" border="0"></a>
    </td>
</tr></table>
<a name="start"></a>
<hr size="3">
<table border="0" width="100%" cellspacing="5">  <!--- global table -->
<tr><td valign="top"> <!-- Index -->
<font size="2">
 <a href="../../index_i.htm">Home</b></a><br>
 - <a href="../pov__ita.htm#objects"><b><nobr>Tutorial POV-Ray</nobr></b></a><br>
<br>
 - <a href="model_000i.htm">Ferromodellismo</b></a><br>
 &nbsp;&nbsp;<a href="model_000i.htm">Modellismo ferroviario</b></a><br>
 &nbsp;&nbsp;<a href="model_000i.htm">con POV-Ray</b></a><br></b>
 &nbsp;&nbsp;&nbsp; <a href="model_000i.htm">Index of Content</b></a><br>
<br>
&nbsp; - <a href="model_300i.htm">Mio 'Rail Track System'</b>,</a><br>
&nbsp; &nbsp; <a href="model_300i.htm">un sistema di binari</b></a><br>
&nbsp; &nbsp; <a href="model_300i.htm">per POV-Ray</b></a><br>
&nbsp; &nbsp; Elementi di base dei binari<br>
 &nbsp; &nbsp; - <a href="model_320i.htm">Binari diritti e curvi</b></a><br>
 &nbsp; &nbsp; - <a href="model_330i.htm">Scambi o deviatoi</b></a><br>
 &nbsp; &nbsp; - <a href="model_340i.htm">Scambi Y e a 3 vie</b></a><br>
 &nbsp; &nbsp; - <a href="model_350i.htm">Incroci</b></a><br>
<br>
 &nbsp; &nbsp; - <a href="model_400i.htm">Uso semplificato con</b></a><br>
 &nbsp; &nbsp; &nbsp; <a href="model_400i.htm">RT_System_00.inc</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_420i.htm">Gli elementi binari</b></a><br>
 &nbsp; &nbsp; &nbsp; &nbsp; <a href="model_420i.htm">di RT_System_00.inc</b></a><br>
<br>
 &nbsp; &nbsp; - <a href="model_500i.htm">Binari adattati alle</b></a><br>
 &nbsp; &nbsp; &nbsp; <a href="model_500i.htm">scale di fermodellismo</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_540i.htm">Binari in scala H0</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_550i.htm">Binari in scala N</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_560i.htm">Binari in scala Z</b></a><br>
<br>
 &nbsp; &nbsp; - <a href="model_600i.htm">Piani Binari con</b></a><br>
 &nbsp; &nbsp; &nbsp; <a href="model_600i.htm">binari adattati</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_610i.htm">Posa dei binari</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_620i.htm">Binari su e gi&ugrave;</b></a><br>
<br>
 &nbsp; &nbsp; - <a href="model_700i.htm">Piani Binari Esempi</b></a><br>
 &nbsp; &nbsp; &nbsp; - <a href="model_710i.htm">Semplice ciclico</b></a><br>
 &nbsp; &nbsp; &nbsp;<b>&gt;</b> <!--a href="model_720i.htm"--><b>Otto semplice</b></a><br>
<br>
 &nbsp; &nbsp; - <a href="dwn/RT_down_i.htm">Download</b></a><br>
 &nbsp; &nbsp; &nbsp; <a href="dwn/RT_down_i.htm">Rail Track System</b></a><br>
<br>
<br>
<nobr> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </nobr>
</font>

</td><td valign="top" rowspae="+2"> <!-- Content - 2nd column -->


<b><font size="+2">Esempi per Piani Binari</b></font><font size="+1"> con binari adattati alle scale di fermodellismo</font><br>
<b>Example 2 :  Otto semplice con ponte<br></b>
<font size="-2">(Sistema di binari <b>a scala N</b>, geometria tipo A</a>)</font>
<br>
<br>
<table><tr>
<td valign="top"><font size="-1"> Per binari curvi abbiamo spesso bisogno di ruotare binari con un angolo intorno<br>
                  un centro di rotazione usando la macro 'Rotate_Around_Trans( RotationVector, Center_of_Rotation )'<br>
                 dal include file '<b>transforms.inc</b>'.<br>
                 Possiamo sostituire questo comando molto lungo <br>
                 'Rotate_Around_Trans(&lt;0, 1*15,0&gt;,&lt;0,0,-R1&gt;)' <br>
                 con una espressione come
                 'RTyz( 1*15, -R1 )' <br>
                 con dichiare la macro seguente:</font>
<table border="2" bgcolor="#efefef"
       bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
       <tr><td>
<pre><b>//----------------------------------------------------//
#include "transforms.inc"
#macro RTyz( Y_Angle, Z_Distance )
 Rotate_Around_Trans(&lt;0, Y_Angle,0&gt;,&lt;0,0, Z_Distance&gt;)
#end
//----------------------------------------------------//</td></b></pre>
            </tr></table>
</td>
</td>
<td valign="top">
     <table border="2" bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td>
            <a href="javascript:ShowImage('im/im_model_720_1.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
              <img src="im/RT_N_A111_BasicSample_032_1pur_s.jpg" border="0" width="320" height="240"
                   alt="Simple cyclic" title="Simple cyclic"></a></td>
            </tr></table>  <font size="-1"><b>
            <a href="javascript:ShowImage('im/im_model_720_1.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
           Un otto semplice con binari su e gi&ugrave; </a></b></a></font>
  <h5 align="center">Download: <a href="pov/RT_N_A111_BasicSample_032pur.pov">La scena per POV-Ray</a></h5>
</td>
</tr></table>

<b>Piazzamento dei binari: </b>
<table><tr>
<td valign="top">
<table border="2" bgcolor="#efefef"
       bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
       <tr><td>
<pre><b>//-----------------------------------------------------------------------------------------//
union{ //  western curve
 object{ Track_Up_00 ("T_R1_15", Step_1/2,1) RTyz( 0*15,-R1) translate&lt;0, 0.0*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 1*15,-R1) translate&lt;0, 0.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 2*15,-R1) translate&lt;0, 1.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 3*15,-R1) translate&lt;0, 2.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 4*15,-R1) translate&lt;0, 3.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 5*15,-R1) translate&lt;0, 4.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 6*15,-R1) translate&lt;0, 5.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 7*15,-R1) translate&lt;0, 6.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 8*15,-R1) translate&lt;0, 7.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz( 9*15,-R1) translate&lt;0, 8.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(10*15,-R1) translate&lt;0, 9.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(11*15,-R1) translate&lt;0,10.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(12*15,-R1) translate&lt;0,11.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(13*15,-R1) translate&lt;0,12.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(14*15,-R1) translate&lt;0,13.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(15*15,-R1) translate&lt;0,14.5*Step_1*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_1,  0) RTyz(16*15,-R1) translate&lt;0,15.5*Step_1*N,0&gt; }
 rotate&lt;0,180,0&gt;
 RTyz(-2*15, R1 )
 } // end  western curve

union{ // simple  station // starting at western end:
 object{ SW_L( SD_1)  translate&lt; 0*L111 ,0,0&gt;}
 object{ T_R9_15  Rotate_Around_Trans(&lt;0,-1*15,0&gt;,&lt;0,0, R9&gt;)
                      translate&lt; 0*L111 ,0,0&gt;}
 object{ T_111        translate&lt; 1*L111 ,0,0&gt;}

 object{ T_111        translate&lt;2*L111 ,0, 1*Track_Distance&gt; }
 object{ T_111        translate&lt;2*L111 ,0, 0&gt; }

 object{ SW_R( SD_2)  translate&lt;3*L111 ,0, 1*Track_Distance&gt;}
 object{ T_111        translate&lt;3*L111 ,0, 0&gt; }

 object{ T_111        translate&lt;4*L111 ,0, 1*Track_Distance&gt; }
 object{ SW_R( SD_2)  rotate&lt;0,180,0&gt;
                      translate&lt;5*L111 ,0, 0&gt; }
 RTyz(-2*15, R1 )
} // ----- end station

union{ // eastern curve
 object{ Track_Up_00 ("T_R1_15", Step_2/2,1) RTyz( 0*15,-R1) translate&lt;0, 0.0*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 1*15,-R1) translate&lt;0, 0.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 2*15,-R1) translate&lt;0, 1.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 3*15,-R1) translate&lt;0, 2.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 4*15,-R1) translate&lt;0, 3.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 5*15,-R1) translate&lt;0, 4.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 6*15,-R1) translate&lt;0, 5.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 7*15,-R1) translate&lt;0, 6.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 8*15,-R1) translate&lt;0, 7.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz( 9*15,-R1) translate&lt;0, 8.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(10*15,-R1) translate&lt;0, 9.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(11*15,-R1) translate&lt;0,10.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(12*15,-R1) translate&lt;0,11.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(13*15,-R1) translate&lt;0,12.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(14*15,-R1) translate&lt;0,13.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(15*15,-R1) translate&lt;0,14.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_R1_15", Step_2,  0) RTyz(16*15,-R1) translate&lt;0,15.5*Step_2*N,0&gt; }
 translate&lt;4.5*L111,0,0&gt;
 RTyz(-2*15, R1 )
} // end  eastern curve

union{ // cross line southeast to northwest
 object{ Track_Up_00 ("T_111", Step_1  , 0)  translate&lt; 0*L111, 0.0*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_111", Step_1/2, 2)  translate&lt; 1*L111, 1.0*Step_2*N,0&gt; }
 object{ T_Straight( 0.062*N )               translate&lt; 2*L111 ,1.5*Step_2*N,0&gt; }

 object{ Track_Up_00 ("T_111",-Step_1/2, 1)  translate&lt; 2*L111+0.062*N ,1.5*Step_2*N,0&gt; }
 object{ Track_Up_00 ("T_111",-Step_1  , 0)  translate&lt; 3*L111+0.062*N, 1.0*Step_2*N,0&gt; }

 rotate&lt;0,180+1.0,0&gt;
 translate&lt;0, 16.5*Step_1*N,0&gt;
 RTyz( 15*15, R1 )
} // end  cross line southeast to northwest
//-----------------------------------------------//</td></b></pre>
            </tr></table>
</td>
</tr></table>


<table><tr>
<td valign="top" colspan="2">
E qui lo stesso otto con i piloni provvisori del ponte:<br>
</td>
</tr>
<tr>
<td valign="top">
     <table border="2" bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td>
            <a href="javascript:ShowImage('im/im_model_720_2.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
              <img src="im/RT_N_A111_BasicSample_031m.jpg" border="0" width="320" height="240"
                   alt="Simple cyclic" title="Simple cyclic"></a></td>
            </tr></table>  <font size="-1"><b>
            <a href="javascript:ShowImage('im/im_model_720_2.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
             Otto semplice.</a></b>
  <h5 align="center">Download: <a href="pov/RT_N_A111_BasicSample_032pur.pov">La scena per POV-Ray</a></h5></font>
</td>
<td valign="top">
     <table border="2" bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td>
            <a href="javascript:ShowImage('im/im_model_720_3.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
              <img src="im/RT_N_A111_BasicSample_032_am.jpg" border="0" width="320" height="240"
                   alt="Simple cyclic" title="Simple cyclic"></a></td>
            </tr></table>  <font size="-1"><b>
            <a href="javascript:ShowImage('im/im_model_720_3.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
             Otto semplice.</a></b>
</font>
</td>
</tr></table>

<b>Estensione con un deviatoio a 3 vie e un binario secondario: </b><br>
 <font size="-1"><font color="#D3164A"><b>Modificha necessaria in rosso!</b></font></font>
<table><tr>
<td valign="top">
<table border="2" bgcolor="#efefef"
       bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
       <tr><td>
<pre><b>//-----------------------------------------------------------------------------------------//
union{ // simple  station
 // starting at western end:
 object{ <font color="#D3164A">SW3</font>( SD_1)  rotate<0,0,0>                            translate< 0*L111 ,0,0> }
 object{ T_R9_15  Rotate_Around_Trans(<0,-1*15,0>,<0,0, R9>)  translate< 0*L111 ,0,0>}
 object{ T_111        rotate<0,0,0>                           translate< 1*L111 ,0,0> }
<font color="#D3164A">// side line
 union{ object{ T_111  translate< 0*L111 ,0,0>  }
        object{ T_111  translate< 1*L111 ,0,0>  }
        object{ T_111  translate< 2*L111 ,0,0>  }
        object{ T_111  translate< 3*L111 ,0,0>  }
                  Rotate_Around_Trans(<0, 1*15,0>,<0,0,-R9>) translate< 0*L111 ,0,0>
      }
 // end side line</font>
 object{ T_055       rotate<0,0,0>   translate< 2*L111 ,0, 1*Track_Distance> }
 object{ T_055       rotate<0,0,0>   translate< 2*L111 ,0, 0> }

 object{ SW_R( SD_2)  rotate<0,0,0>   translate< 2*L111+1*L055 ,0, 1*Track_Distance> }
 object{ T_111        rotate<0,0,0>   translate< 2*L111+1*L055 ,0, 0> }

 object{ T_111        rotate<0,0,0>   translate< 3*L111+1*L055 ,0, 1*Track_Distance> }
 object{ SW_R( SD_2)  rotate<0,180,0> translate< 4*L111+1*L055 ,0, 0> }

 RTyz(-2*15, R1 )
} //
//-----------------------------------------------//</td></b></pre>
            </tr></table>
</td>
</tr></table>

<table><tr>
<td valign="top" colspan="2">
&nbsp;
</td>
</tr>
<tr>
<td valign="top">
     <table border="2" bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td>
            <a href="javascript:ShowImage('im/im_model_720_4.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
              <img src="im/RT_N_A111_BasicSample_033t.jpg" border="0" width="320" height="240"
                   alt="Simple cyclic" title="Simple cyclic"></a></td>
            </tr></table>  <font size="-1"><b>
            <a href="javascript:ShowImage('im/im_model_720_4.htm')"
                    onmouseover="window.status='ShowSingleImage';return true"
                    onmouseout="window.status=''">
            Un otto semplice + binario secondario.</a></b>
  <h5 align="center">Download: <a href="pov/RT_N_A111_BasicSample_033.pov">La scena per POV-Ray</a></h5>
</font>
</td>
<td valign="top">
    &nbsp;
</font>
</td>
</tr></table>

<br>
<br>

</td>
</tr>
<tr>
<td valign="middle" align="center"><a href="#top">top</a>
</td></tr></table>
</div>
<!-- footer -->
<hr size="3">
<table width="95%" align="center"><tr>
<td>
<i><font size="-1">&copy; Friedrich A. Lohm&uuml;ller, 2012<br>
    <a href="http://www.f-lohmueller.de" target="_new"><nobr>www.f-lohmueller.de</nobr></i></a>
 <!-- COUNTERSTART -->
 <script language="JavaScript" type="text/javascript" src="../../pphlogger.js"></script>
 <noscript><img alt="" src="http://www.counterbox.de/counter/pphlogger.php?id=flohmuller&st=img"></noscript>
 <!-- COUNTERENDE -->
 </font>
</td>
 <td align="right">
&nbsp;</td>
 <td align="right" width="25%">
&nbsp;</td>
</tr></table><!-- end footer -->
</body>
</html>
