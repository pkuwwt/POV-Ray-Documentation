// POV-Ray 3.7 Scene File " ... .pov"
// author:  ...
// date:    ...
//--------------------------------------------------------------------------
#version 3.7;
global_settings{ assumed_gamma 1.0 }
#default{ finish{ ambient 0.1 diffuse 0.9 }} 
//--------------------------------------------------------------------------
#include "colors.inc"
#include "textures.inc"
#include "glass.inc"
#include "metals.inc"
#include "golds.inc"
#include "stones.inc"
#include "woods.inc"
#include "shapes.inc"
#include "shapes2.inc"
#include "functions.inc"
#include "math.inc"
#include "transforms.inc"
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
#declare Camera_Number = 0 ;
//---------------------------------------------------------------------------------
// camera -------------------------------------------------------------------------
#switch ( Camera_Number )
#case (0)
  #declare Camera_Location = < 0.00, 1.00, -3.00> ;  // front view
  #declare Camera_Look_At  = < 0.00, 1.00,  0.00> ;
  #declare Camera_Angle    =  75 ;
#break
#case (1)
  #declare Camera_Location =  < 2.0 , 2.5 ,-3.0> ;  // diagonal view
  #declare Camera_Look_At  =  < 0.0 , 1.0 , 0.0> ;
  #declare Camera_Angle    =  90 ;
#break
#case (2)
  #declare Camera_Location = < 3.0, 1.0 , 0.0> ;  // right side view
  #declare Camera_Look_At  = < 0.0, 1.0,  0.0> ;
  #declare Camera_Angle    =  90 ;
#break
#case (3)
  #declare Camera_Location = < 0.00, 5.00,  0+0.000> ;  // top view
  #declare Camera_Look_At  = < 0.00, 0.00,  0+0.001> ;
  #declare Camera_Angle    = 90 ;
#break
#else
  #declare Camera_Location = < 0.00, 1.00, -3.50> ;  // front view
  #declare Camera_Look_At  = < 0.00, 1.00,  0.00> ;
  #declare Camera_Angle    =  75 ;
#break
#break
#end // of "#switch ( Camera_Number )"  
//--------------------------------------------------------------------------
camera{ // ultra_wide_angle // orthographic 
        location Camera_Location
        right    x*image_width/image_height
        angle    Camera_Angle
        look_at  Camera_Look_At
      }
// sun ---------------------------------------------------------------------
light_source{< 3000,3000,-3000> color rgb<1,1,1>*0.9}                // sun 
light_source{ Camera_Location   color rgb<0.9,0.9,1>*0.1 shadowless}// flash

// sky ---------------------------------------------------------------------
#local SkyTransform  = transform{ rotate <0,0,0> translate  <-3,0,-3> } 
//--------------------------------------------------------------------------
sky_sphere{ pigment{ gradient <0,1,0>
                     color_map{
                                [ 0.0 color rgb <0.24, 0.32, 1.0>*0.3 ]
                                [ 0.23 color rgb <0.16, 0.32, 0.9>*0.9 ]
                                [ 0.37 color rgb<1,0.1,0> ]
                                [ 0.52 color rgb<1,0.2,0> ]
                                [ 0.70 color rgb <0.36, 0.32, 1.0>*0.7 ]
                                [ 0.80 color rgb <0.14, 0.32, 1.0>*0.5 ]
                                [ 1.00 color rgb <0.24, 0.32, 1.0>*0.3 ]
                              } // end color_map
                     scale 2
                     rotate<-15,0,0>
                     translate <0,0.7,0>
                   } // end pigment
          } // end of sky_sphere ------------------------------------------
// white clouds:
plane{<0,1,0>,1 hollow  
       texture{ pigment{ bozo turbulence 0.92
                         color_map { [0.00 rgbt<1,1,1,1>] // <0.24, 0.32, 1.0>*0.7]
                                     [0.50 rgbt<1,1,1,1>] // <0.24, 0.32, 1.0>*0.7]
                                     [0.60 rgb <1,1,1>]
                                     [0.85 rgb <0.25,0.25,0.25>]
                                     [1.00 rgbt<0.5,0.5,0.5, 0.65>]}
                        scale<1,1,1.5>*3.5  translate< 0.5,0,0>
                       }
                finish {ambient 1 diffuse 0 }
                }      
       rotate<0, 0,0> transform SkyTransform
       scale 10000}
// red orange clouds:
plane{<0,1,0>,1 hollow  
       texture{ pigment{ bozo turbulence 0.92
                         color_map { [0.00 rgbt<1,1,1,1>] // <0.24, 0.32, 1.0>*0.7]
                                     [0.45 rgbt<1,1,1,1>] // <0.24, 0.32, 1.0>*0.7]
                                     [0.75 rgbt <1.00,0.15,0.00,0.50>]
                                     [0.85 rgbt <0.75,0.55,0.00,0.30>]
                                     [1.00 rgbt <0.50,0.35,0.15, 0.75>]}
                        scale<1,1,1.5>*3.5  translate< 0.5,0,1.5>// +move it in z
                       }
                finish {ambient 1 diffuse 0 }
                }      
       rotate<0, 0,0>  transform SkyTransform
       scale 9900}
//-------------------------------------------------------// end sky + clouds
// fog on the ground -------------------------------------------------------
fog { fog_type   2
      distance   50
      color      rgb<1,0.35,0.1>  
      fog_offset 0.1
      fog_alt    1.0
      turbulence 1.8
    } //------------------------------------------------// end of ground fog
//--------------------------------------------------------------------------


// ground ------------------------------------------------------------------
plane { <0,1,0>, 0 
        texture{ pigment{ color rgb<0.35,0.65,0.0>*0.55 }
                 normal { bumps 0.75 scale 0.015 }
                 finish { phong 0.1 }
               } // end of texture
      } // end of plane ------------------------------------// end of ground
//--------------------------------------------------------------------------
//---------------------------- objects in scene ----------------------------
//--------------------------------------------------------------------------
