<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
<title>Exemples POV-Ray, Comment faire des objets pour POV-Ray</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta http-equiv="language" content="fr">
<meta name="robots" content="index">
<meta name="robots" content="follow">
<meta name="Author" content="Friedrich A. Lohmueller">
<meta name="copyright" content="Copyright 2011, Friedrich A. Lohmueller - all rights reserved worldwide">
<meta name="description" content="Exemples POV-Ray, Comment faire des objets pour POV-Ray">
<meta name="keywords" content="POV, POVRAY, POV-Ray, Raytracing, 3D-Grafique, infographique, 3D Graphique, Exemples POV-Ray, Comment faire des objets pour POV-Ray">
<link rel="stylesheet" type="text/css" href="../lo1style.css">
<SCRIPT LANGUAGE=JavaScript>
<!--
function ShowImage(ImageHtml) {
 New=window.open(ImageHtml, "PictureWin", "status=0,scrollbars=0,resizable=1,width=675,height=525");
 New.focus();  }
//-->
</SCRIPT>
<SCRIPT LANGUAGE=JavaScript>
<!--
function ShowImage2(ImageHtml) {
 New=window.open(ImageHtml, "PictureWin", "status=0,scrollbars=0,resizable=1,width=695,height=525");
 New.focus();  }
//-->
</SCRIPT>
</head>

<body bgcolor="#d8d8d0" text="#505030" link="#006677" vlink="#445566" alink="#cc0055">

<table width="100%" border="0"><tr>
 <td valign="top"><h6><nobr>Descriptions et exemples </nobr> pour le <nobr> POV-Ray raytracer</nobr>
                      <nobr>par Friedrich A. Lohmueller</nobr> <a name="top"> </a>
 <hr size="3">
 <div align="center">
      <font size="5"> &nbsp; &nbsp; &nbsp; <b>Objets POV-Ray</b></font> -
      <font size="-1"><b>Comment faire des objets pour POV-Ray</b</font></div>
 </td></h6>
 <td align="right">
   <a href="tec_720e.htm"><font size="2">English </font><img src="flag_uk.gif" border="0" width="22" height="15" alt="English" titel="English"</a></nobr>
   <a href="tec_720e.htm"><img src="flag_usa.gif" border="0" width="22" height="15" alt="English" titel="English"></a><br>
   <a href="tec_720i.htm"><font size="2">Italiano</font></a>&nbsp;
   <a href="tec_720i.htm"><img src="flag_ita.gif" alt="Italiano" title="Italiano"align="bottom" width="22" height="15" border="0"></a><br>
   <a href="tec_720d.htm"><font size="2">Deutsch</b></a>&nbsp;
   <a href="tec_720d.htm"><img src="flag_ger.gif" border="0" width="22" height="15"></a>
    </td>
</tr></table>
<a name="start"></a>
<hr size="3">
<table border="0" width="100%" cellspacing="5">  <!--- global table -->
<tr><td valign="top"> <!-- Index -->
<font size="2">
 <a href="../../index_f.htm">Page d'Accueil</b></a><br>
 - <a href="../pov__fra.htm"><nobr>POV-Ray Tutorial</nobr></b></a><br>
<br>
 &nbsp;&nbsp;- <a href="sam_000f.htm">Exemples POV-Ray</b></a><br>
 &nbsp;&nbsp;&nbsp; <a href="sam_000f.htm">Table des mati&egrave;res</b></a><br>
&nbsp; -  <a href="sam_100f.htm">Architecture</b></a><br>
&nbsp; -  <a href="sam_300f.htm">Geometrie</b></a><br>
<!--&nbsp; -  <a href="sam_400f.htm">Plantes</b></a><br-->
&nbsp; -  <a href="tec_000f.htm">Technique</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_750f.htm">&Eacute;chelle</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_700f.htm">Pyl&ocirc;nes</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_710f.htm">Garde-fou / rambard</b></a><br>
 &nbsp; &nbsp; -  <!--a href="tec_720f.htm"--><b>Pont</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_730f.htm">Tubes</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_730f.htm">Tuyaux</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_731f.htm">Bifurcation de Tuyau</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_732f.htm">Robinet d'Arr&ecirc;t</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_400f.htm">Cha&icirc;ne</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_450f.htm">Bobine de fil</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_500f.htm">Torpedo</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_600f.htm">Cruise Missile</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_900f.htm">Missile</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_190f.htm">Roue</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_100f.htm">Camion</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_850f.htm">H&eacute;lice</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_800f.htm">Avion</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_550f.htm">Cano&euml;</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_050f.htm">Guitare</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_010f.htm">Afficheur 7 segments</b></a><br>
<nobr> &nbsp; &nbsp; -  <a href="tec_020f.htm">C&acirc;ble plat - Nappe plat</b></a></nobr><br>
 &nbsp; &nbsp; -  <a href="tec_030f.htm">Harnais de c&acirc;bles</b></a><br>
<!--&nbsp; &nbsp; -  <a href="tec_000f.htm">Bateau</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_000f.htm">Chemin de Fer</b></a><br>-->

<nobr> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </nobr>
</font>


</td><td valign="top" rowspan="2"> <!-- Content - 2nd column -->


<table cellpadding="5" width="80%" align="center">
<tr>
 <td align="center" valign="top">&nbsp;<br>
   <table align="center" border="4"  bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td><a href="javascript:ShowImage('bridges/bridge_0im.htm')"
                 onmouseover="window.status='ShowSingleImage';return true"
                 onmouseout="window.status=''">
              <img src="bridges/Steel_Bridge_1_12sc.jpg" width="160" height="120" border="0"
                   alt="Steel_Bridge_1" title="Steel_Bridge_1"></a></td>
    </tr></table><br>

  </td>
 <td align="left" valign="top">
  <p align="justify"><font size="5"><b>Comment faire<br>  le treillis m&eacute;tallique
                                       d'un pont .</b></font><br>
 <h6>Objets : &nbsp; Round_Box, cylinder.<br>
     M&eacute;thodes : #local, #declare, union, #macro, #while loops, #if, <br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cisaillement avec matrix.</h6>
 <h6 align="justify">Avec cet exemple on peut voir comment on peut faire le treillis m&eacute;tallique d'un pont
 avec les poutres type Warren pour une rue ou pour un pont de chemin de fer.
  Il est possible utiliser mesures variables pour les dimensions du treillage du pont.
  </td></h6>
</tr>
<tr><td colspan="2"><hr></td></tr>
</table>

<table cellpadding="10" width="90%" align="center">
<tr>
 <td valign="top">
<p align="justify">
<font size="+1"><b>La construction en detail :</b></font></b><br>&nbsp; </font><br>
  <b>Partie 0 :</b> <font size="-1">En premier lieu nous d&eacute;finissons <b>les variables de base </b>
  pour les dimensions du pont (textures &agrave; votre choix !):</font>
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b>#local L =10.00; // bridge length        .
#local H = 2.50; // bridge height
#local W = 1.50; // bridge width
#local BD = 0.50, // beam diameter
#local BR = 0.10; // beam border radius</b></td></pre></tr></table>

 <b>Partie 1 :</b> <font size="-1">Apr&egrave;s nous calculons le <b>nombre de subdivisions</b> et leur
<b>longueur pour une distribution &eacute;quidistant</b> des segments. De m&ecirc;me le <b>facteur de cisaillement</b>
( calculation voire l'image ci-contre ) :</font>
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b> // number of subdivisions:
#local NSub = int(L/H);
// distance for equidistant distribution:      .
#local SubDistance = L/NSub;
// shearing factor:
#local S_Factor = 0.5*SubDistance/H;
</b></td></pre></tr></table>

  <b>Partie 2 :</b> <font size="-1">Puis nous faissons une <b>paire de diagonales</b>: </font>
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b>union{ // pair of diagonals
 object{
   Round_Box(&lt;-BD/2,0,-BD/2&gt;,&lt;BD/2,H,BD/2&gt;,BR,0)
   matrix&lt; 1, 0, 0, //  matrix-shear_y_to_x
              S_Factor, 1, 0,
              0, 0, 1,
              0, 0, 0>
 } // -----------------------------------------
 object{
   Round_Box(&lt;-BD/2,0,-BD/2&gt;,&lt;BD/2,H,BD/2&gt;,BR,0)
   matrix&lt; 1, 0, 0, //  matrix-shear_y_to_x
             -S_Factor, 1, 0,
              0, 0, 1,
              0, 0, 0>
   translate&lt;SubDistance,0,0&gt;
 } // -----------------------------------------
}// end union pair of diagonals</b></td></pre></tr></table>
</td>
 <td colspan="1">
  <table align="center" border="3" bgcolor="#EFEFEF"
         bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
  <tr><td><img src="bridges/Steel_Bridge_1_000c.jpg" width="320" height="240" alt="shearing" title="shearing"></td></tr>
  </table> <font size="-1"><b>comment calculer le facteur de cisaillement S.</b></font>

 <table align="center" border="3" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_02c.jpg" width="320" height="208" alt="pair of diagonals" title="pair of diagonals"></td></tr>
 </table> <font size="-1"><b>Une paire des diagonales cisaill&eacute;es.</b></font>
 </td>

</tr>
<tr>
 <td colspan="1">
  <b>Partie 3 :</b> <font size="-1">Maintainant nous <b>arrangons les diagonales</b> avec un boucle while (vert).
    Pour nombres impairs nous devons renverser les poutres en x et d&eacute;placer les poutres de 'SubDistance/2' en direction x (red).
   Nous ajoutons aussi un longeron au-dessous et au-desus pour completer <b>les poutres d'un c&ocirc;t&eacute; (side beam)</b>: </font>
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b>// number of subdivisions:
#local NSub = int(L/H);
// distance for equidistant distribution:      .
#local SubDistance = L/NSub;
// shearing factor:
#local S_Factor = 0.5*SubDistance/H;
//-----------------------------------------
#local Side_Beam =
union{ // side strut
<font color="#008000">  #local Nr = 0; // start counter at zero!
  #while (Nr &lt; 2*NSub )
</font>  object{
   Round_Box(&lt;-BD/2,0,-BD/2&gt;,
             &lt;BD/2,H+2*BR,BD/2&gt;,BR,0)
   matrix&lt; 1, 0, 0, //  matrix-shear_y_to_x
              S_Factor, 1, 0,
              0, 0, 1,
              0, 0, 0&gt;
<font color="#800000">   #if( Nr/2 != int(Nr/2 )) // uneven numbers
      scale&lt;-1,1,1&gt;
      translate&lt;SubDistance/2,0,0&gt;
   #end</font>
   translate&lt;Nr*SubDistance/2 + BD/2,-2*BR,0&gt;
  } // --------------------------------------
<font color="#008000">  #local Nr = Nr + 1 ;
  #end // end of loop
  //-----------------------------------------
</font>  // bottom strut
  object{
   Round_Box(&lt;0,-BD,-BD/2>,&lt;L+BD,0,BD/2&gt;,BR,0)
  }
  // top strut
  object{
   Round_Box(&lt;SubDistance/2,-BD,-BD/2>,
             &lt;L-SubDistance/2+BD,0,BD/2&gt;,BR,0)
   translate&lt;0,H,0&gt;
  }
} // end of union side strut
// ---------------------------------
object{ Side_Beam  translate&lt;0,0,0&gt;}
</b></td></pre></tr></table>

</td>
<td colspan="1" valign="top">

 <table align="center" border="3" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_03c.jpg" width="320" height="160" alt="diagonals" title="diagonals"></td></tr>
 </table><font size="-1"><b>Les diagonales par un boucle while.</b></font>


 <table align="center" border="3" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_06c.jpg" width="320" height="160" alt="side strut" title="side strut"></td></tr>
 </table><font size="-1"><b>L' object{ Side_Beam }</b></font>
 </td>

</tr>
<tr><td colspan="2"><hr width="100%"></td></tr>
<tr>
 <td colspan="1" rowspan="2">
  <p align="justify"><b>Partie 4 :</b> La macro <b>Steel_Bridge_Framework_1</b><br>
   <font size="-1">Deux poutres lat&eacute;rales, quelques poutres de travers au-dessous et des diagonales
   et quelques longerons additionnels font un pont parfait.
   Nous ajoutons tous ensemble &agrave; une macro pour obtenir la construction si flexible que possible !</font>

<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b>//--------------------------------------//////////
#macro Steel_Bridge_Framework_1(
                        Len, // bridge length
                        H, // bridge height
                        W, // bridge width
                        BD,// beam diameter
                        BR,// beam border radius
                      )// ------------------------
// -----------------------------------------------
// ------------------------------- default texture
#ifndef( Steel_Bridge_1_Texture_1 )
#declare Steel_Bridge_1_Texture_1 =
         texture { pigment{ color rgb&lt;1,1,1&gt;*0.5}
                   normal { bumps 0.25 scale 0.35 }
                   finish { phong 1 }
                 } // end of texture
#end // ------------------------------------------
#local L = Len-BD; // inner bridge lenght
//------------------------------------------------
// number of subdivisions:
#local NSub = int(L/H);
// equidistant distribution:
#local SubDistance = L/NSub;
// shearing factor:
#local S_Factor = 0.5*SubDistance/(H+2*BR);

//------------------------------------------------
#local Side_Beam =
union{
 #local Nr = 0; // start counter at zero!
 #while (Nr &lt; 2*NSub )
  object{ Round_Box(&lt;-BD/2,0,-BD/2&gt;,
                    &lt;BD/2,H+2*BR,BD/2&gt;,BR,0)
          texture{ Steel_Bridge_1_Texture_1 }
          matrix&lt; 1,0,0, // matrix-shear_y_to_x
                     S_Factor, 1, 0,
                     0,0,1,
                     0,0,0&gt;
          #if( Nr/2 != int(Nr/2 )) // uneven numbers
            scale&lt;-1,1,1&gt;
            translate&lt;SubDistance/2,0,0&gt;
          #end

          translate&lt;Nr*SubDistance/2+BD/2,-2*BR,0&gt;
        } // -------------------------------------

 #local Nr = Nr + 1 ;
 #end // end

 // bottom strut
 object{ Round_Box(&lt;0,-BD,-BD/2&gt;,&lt;L+BD,0,BD/2&gt;,BR,0)
         texture{ Steel_Bridge_1_Texture_1 }
        }
 // top strut
 object{ Round_Box(&lt;SubDistance/2,-BD,-BD/2&gt;,
                   &lt;L-SubDistance/2+BD,0,BD/2&gt;,BR,0)
         texture{ Steel_Bridge_1_Texture_1 }
         translate&lt;0,H,0&gt;
       }
} // end of union
// -----------------------------------------------
// ---------------------------------- final union:
#union{
 object{ Side_Beam translate&lt;0,0,-W/2+BD/2&gt; }
 object{ Side_Beam translate&lt;0,0,-W/2+BD/2&gt;
                              scale&lt;1,1,-1&gt; }
 object{Round_Box(&lt;0,-BD/2,-BD/3&gt;,&lt;L+BD,0,BD/3&gt;,BR,0)
        texture{ Steel_Bridge_1_Texture_1 }
        translate&lt;0,0,-W/4+BD&gt;
       }
 object{Round_Box(&lt;0,-BD/2,-BD/3&gt;,&lt;L+BD,0,BD/3&gt;,BR,0)
        texture{ Steel_Bridge_1_Texture_1 }
        translate&lt;0,0, W/4-BD&gt;
       }
 #local Nr = 0; // start counter at zero!
 #while (Nr &lt;= NSub )
    // foot traversals
    object{ Round_Box(&lt;-BD/2,-BD,-W/2&gt;,
                      &lt;BD/2,0,W/2&gt;,BR,0)
            texture{ Steel_Bridge_1_Texture_1 }
            translate&lt;Nr*SubDistance + BD/2,0,0&gt;
          }
    // foot diagonals
    #if( Nr &lt; NSub )
    object{ Round_Box(&lt;-BD/4,-BD,-W/2+BD/2&gt;,
                      &lt;BD/4,-BD/2,W/2-BD/2&gt;,BR,0)
          texture{ Steel_Bridge_1_Texture_1 }
          matrix&lt; 1,0,0, //  matrix-shear_y_to_x
                     0,1,0,
                     1*(SubDistance-BD)/(W-BD),0,1,
                     0,0,0&gt;
          #if((Nr/2) = int(Nr/2)) // even numbers
              scale&lt;1,1,-1&gt;
          #end
          translate&lt;(Nr+0.5)*SubDistance+BD/2,0,0&gt;
        }
    #end // end diagonals
 #local Nr = Nr + 1 ;
 #end // end loop
} // end final union
#end // ----------------------------- end of macro
//--------------------------------------//////////

//------------------------------------------------
object{ Steel_Bridge_Framework_1(
                       10.00, // bridge length
                        2.00, // bridge height
                        4.00, // bridge width
                        0.30, // beam diameter
                        0.05,// beam border radius
                      )// ------------------------

  rotate&lt;0, 0,0&gt; translate&lt;0,0.0,0&gt;
} //----------------------------------------------</b></td></pre></tr></table>
<b>Note :</b> Pour une utilisation plus confortable comme un objet pr&ecirc;t &agrave; l'usage
nous devons mettre cet objet dans un fichier include comme on peut voir dans le fichiers exemple ci-contre !
</td>

 <td colspan="1">
<br>
<br>
<br>
<br>
 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_10c.jpg" width="320" height="160" alt="floor beams and diagonals" title="floor beams and diagonals"></td></tr>
 </table>
<br>
<br>
<br>
<br>

 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_11c.jpg" width="320" height="240"alt="floor beams and diagonals" title="floor beams and diagonals"></td></tr>
 </table><font size="-1"><b>Les poutres de travers au-dessous, les diagonales et les longerons.</b></font>
<br>
<br>
<br>
<br>

 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_12c.jpg" width="320" height="240"alt="floor beams and diagonals" title="floor beams and diagonals"></td></tr>
 </table> <font size="-1"><b>Le treillis m&eacute;tallique complet du pont.</b></font>
<font size="5">
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br> </font>

 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="bridges/Steel_Bridge_1_12b.jpg" width="320" height="240"alt="floor beams and diagonals" title="floor beams and diagonals"></td></tr>
 </table> <font size="-1"><b>Le treillis m&eacute;tallique d'un pont.</b><br>
 Le fichier include pour POV-Ray :
 <a href="bridges/Steel_Bridge_Framework_1.inc">&quot;Steel_Bridge_Framework_1.inc&quot;</a><br>
 et le fichier de sc&egrave;ne pour POV-Ray :
 <a href="bridges/Steel_Bridge_Framework_1_1.pov">&quot;Steel_Bridge_Framework_1_1.pov&quot;</a></font>


</td>
</tr>
<tr>

 <td colspan="1">
 </td>


</tr>
<tr><td colspan="2"><hr width="100%"></td></tr>
</table>

&nbsp;<br>
 <h5><b>Objets pr&ecirc;t &agrave; l'usage</b> pour POV-Ray<br>
  comme  fichiers include avec fichiers exemple<br>
  on peut trouver sur la page des <a href="../objects/obj_000f.htm" target="_new"><b> Objets pr&ecirc;t &agrave; l'usage pour POV-Ray</b></a>
</td></h5>
</tr>
<tr>
<td valign="middle" align="center"><a href="#top">top</a>
</td></tr></table>
</div>
<!-- footer -->
<hr size="3">
<table width="95%" align="center"><tr>
<td>
<i><font size="-1">&copy; Friedrich A. Lohm&uuml;ller, 2011<br>
   <a href="http://www.f-lohmueller.de" target="_blank"><nobr>http://www.f-lohmueller.de</nobr></i></a>
 <!-- COUNTERSTART -->
 <script language="JavaScript" type="text/javascript" src="../../pphlogger.js"></script>
 <noscript><img alt="" src="http://www.counterbox.de/counter/pphlogger.php?id=flohmuller&st=img"></noscript>
 <!-- COUNTERENDE -->
 </font>
</td>
 <td  align="right">
&nbsp;</td>
 <td align=right  width="30%">
&nbsp;</td>
</tr></table><!-- end footer -->
</body>
</html>
