<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
<title>Esempi POV-Ray - Come fare oggetti per POV-Ra</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta http-equiv="language" content="it">
<meta name="robots" content="index">
<meta name="robots" content="follow">
<meta name="Author" content="Friedrich A. Lohmueller">
<meta name="copyright" content="Copyright 2011, Friedrich A. Lohmueller - tutti diritti riservati - all rights reserved worldwide">
<meta name="description" content="Oggetti per POV-Ray">
<meta name="keywords" content="POV, POVRAY, POV-Ray, Raytracing, 3D-Grafica, 3D Graphica, Oggetti POV-Ray - Oggetti pronto per l'uso">
<link rel="stylesheet" type="text/css" href="../lo1style.css">
<SCRIPT LANGUAGE=JavaScript>
<!--
function ShowImage(ImageHtml) {
 New=window.open(ImageHtml, "PictureWin", "status=0,scrollbars=0,resizable=1,width=655,height=465");
 New.focus();  }
//-->
</SCRIPT>
</head>

<body bgcolor="#d8d8d0" text="#505030" link="#006677" vlink="#445566" alink="#cc0055">

<table width="100%" border="0"><tr>
 <td valign="top"><h6><nobr>Descrizioni ed esempi </nobr> per il <nobr> raytracer POV-Ray </nobr>
     <nobr>di Friedrich A. Lohm&uuml;ller</nobr>
 <hr size="3">
 <div align="center">
      <font size="5"> <b>Esempi POV-Ray</b></font> -
      <font size="-1"><b>Come fare oggetti per POV-Ray</b</font></div>
 </td></h6>
 <td align="right">
        <a href="tec_010e.htm"><font size="2">English </font><img src="flag_uk.gif" border="0" width="22" height="15" alt="English" titel="English"</a>
        <a href="tec_010e.htm"><img src="flag_usa.gif" border="0" width="22" height="15" alt="English" titel="English"></a><br>
        <a href="tec_010f.htm"><font size="2">Fran&ccedil;ais</font></a>
        <a href="tec_010f.htm"><img src="flag_fra.gif" alt="fran&ccedil;ais" title="fran&ccedil;ais"align="bottom" width="22" height="15" border="0"></a><br>
        <a href="tec_010d.htm"><font size="2">Deutsch</font></a>
        <a href="tec_010d.htm"><img src="flag_ger.gif" alt="Deutsch" title="Deutsch" align="bottom" width="22" height="15" border="0"></a>
    </td>
</tr></table>
<a name="start"></a>
<hr size="3">
<table border="0" width="100%" cellspacing="5">  <!--- global table -->
<tr><td valign="top"> <!-- Index -->
<font size="2">
 <a href="../../index_i.htm">Home</b></a><br>
 - <a href="../pov__ita.htm"><nobr>POV-Ray Tutorial</nobr></b></a><br>
<br>
 &nbsp;&nbsp;- <a href="sam_000i.htm">Esempi per POV-Ray</b></a><br>
 &nbsp;&nbsp; Indice generale<br>
&nbsp; -  <a href="sam_300i.htm">Geometria</b></a><br>
&nbsp; -  <a href="sam_100i.htm">Architettura </b></a><br>
&nbsp; -  <a href="tec_000i.htm">Tecnica</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_750i.htm">Scala a Pioli</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_700i.htm">Piloni e Tralicci</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_710i.htm">Parapetto</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_720i.htm">Ponte</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_730i.htm">Tubature</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_731i.htm">Bifucazione di Tubi</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_732i.htm">Rubinetto di Arresto</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_400i.htm">Catena</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_450i.htm">Bobina di filo</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_500i.htm">Torpedo</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_600i.htm">Cruise Missile</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_900i.htm">Razzo, Missile</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_190i.htm">Ruota</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_100i.htm">Camion</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_850i.htm">Elica</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_800i.htm">Aeroplano</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_550i.htm">Canoa</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_050i.htm">Chitarra</b></a><br>
 <nobr>&nbsp; &nbsp; -  <!--a href="tec_010i.htm"--><b>Display a 7 Segmenti</b></a></nobr><br>
 &nbsp; &nbsp; -  <a href="tec_020i.htm">Cavo piatto</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_030i.htm">Fascio di cavi</b></a><br>
<!--&nbsp; &nbsp; -  <a href="sam_000i.htm">Navi</b></a><br>
 &nbsp; &nbsp; -  <a href="sam_000i.htm">Ferrovia</b></a><br>-->

<nobr> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </nobr>
</font>


</td><td valign="top" rowspan="2"> <!-- Content - 2nd column -->

<table cellpadding="5" width="100%" align="center">
<tr>
 <td align="center" valign="top">&nbsp;<br>
   <table align="center" border="4"  bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td><a href="javascript:ShowImage('electronic/Seven_Segment_LCD_1_im.htm')"
                 onmouseover="window.status='ShowSingleImage';return true"
                 onmouseout="window.status=''">
              <img src="electronic/Seven_Segment_LCD_01t.jpg" width="160" height="120" border="0"
                   alt="7-Segment_LCD" title="7-Segment_LCD"></a></td>
    </tr></table><br>

  </td>
 <td align="left" valign="top">
  <h1 align="left"><b>Display a sette segmenti</b><br>
       <font size="-1">La costruzione di un display a cristalli liquidi a 7 segmenti.<br>
 <h6>Oggetti:  box, polygon.<br>
     Metodi:  #declare, #local, union, #macro, #while, #if #else, #switch, array.
 </td></h6>
</tr>
<tr><td colspan="2"><hr></td></tr>
</table>



<div align="center">
<table w cellpadding="3" width="80%" align="center">
 <tr>
 <td valign="top" colspan="2">
<p align="justify"><font size="+2"><b>Come si fa un display a cristalli liquidi a sette segmenti:</b></font></b><br>
 </td>
 </tr>
 <tr>
 <td valign="top">
<h4><b>Passo 1: Un ingsolo segmento:</b></h4>
      Dapprima facciamo un elemento singolo usando un <br>
      poligono con una  una serie chiusa di punti delimitanti :<br>
// polygon { numero dei punti,<br>
// &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; lista dei punti &lt;x,y&gt; -  serie chiusa! }
<pre><b>#local SS_Width = 1.2;
#local SS_Length = 6.0;
#local SS_Diag = sqrt(SS_Width*SS_Width)/2;

#declare Seven_Segment_Element = //---------
polygon {  7,
  &lt;-SS_Length/2, 0&gt;,
  &lt;-SS_Length/2+SS_Diag, -SS_Width/2&gt;,
  &lt; SS_Length/2-SS_Diag, -SS_Width/2&gt;,
  &lt; SS_Length/2, 0&gt;,
  &lt; SS_Length/2-SS_Diag,  SS_Width/2&gt;,
  &lt;-SS_Length/2+SS_Diag,  SS_Width/2&gt;,
  &lt;-SS_Length/2, 0&gt;
  texture{
    pigment{ color rgb&lt; 1, 0, 0&gt; }
    finish { ambient 0.9 diffuse 0.1 phong 1}
         } // end of texture
  rotate&lt;90,0,0&gt;//turn it on the floor !!
} // end of polygon --------------------------
</b></pre>

</td>
<td colspan="1">
  <table align="center" border="5" bgcolor="#EFEFEF"
         bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
  <tr><td><img src="electronic/Seven_Segment_Element_1.jpg" width="320" height="240"
           alt="Seven_Segment_Element" title="Seven_Segment_Element"></td></tr>
  </table>
</td>
</tr>

<tr>
  <td colspan="2"  align="center"><hr></td>
</tr>

<tr>
 <td colspan="1"><h4><b>Passo 2:</b> <b>Il singolo segmento come macro</b></h4>

  <p align="justify">Per avere l'occasione di cambiare from il colore di attivo a inattivo
  dobbiamo convertire questa definizione di un segmento a una definizone con un macro:</p>
<pre><b>#macro SS7_Element( SS_Color__ )
#local SS_Width = 1.2;
#local SS_Length = 6.0;
#local SS_Diag = sqrt(SS_Width*SS_Width)/2;

polygon {  7,
  &lt;-SS_Length/2, 0&gt;,
  &lt;-SS_Length/2+SS_Diag, -SS_Width/2&gt;,
  &lt; SS_Length/2-SS_Diag, -SS_Width/2&gt;,
  &lt; SS_Length/2, 0&gt;,
  &lt; SS_Length/2-SS_Diag,  SS_Width/2&gt;,
  &lt;-SS_Length/2+SS_Diag,  SS_Width/2&gt;,
  &lt;-SS_Length/2, 0&gt;
  texture{SS_Color__}
  rotate&lt;90,0,0&gt;//turn it on the floor !!
} // end of polygon --------------------------
</b></pre>
  <p>Possiamo usare questo macro con ogni colore desirato:</p>
<pre><b>#declare Active =   // red
  texture{
     pigment{ color rgb&lt 1, 0, 0&gt;}
     finish { ambient 0.9 diffuse 0.1}
  } // end of texture
#declare Inactive =   //gray
  texture{
     pigment{ color rgb&lt1,1,1&gt;*0.2}
  } // end of texture

object{
  S7_Element( Active )
  translate&lt;0,0.001, 0.7&gt;}
object{
  S7_Element(Inactive)
  translate&lt;0,0.001,-0.7&gt;}</b></pre>



</td>
<td colspan="1">
 <h5 align="center">
 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
  <tr><td><img src="electronic/Seven_Segment_Element_2.jpg" width="320" height="240"
           alt="Seven_Segment_Element" title="Seven_Segment_Element"></td>
           </tr>
 </table>Singoli segmenti di un display a cristalli liquidi</h5>
</td>
</tr>
<tr>
  <td colspan="2"  align="center"><hr></td>
</tr>
</table>
<table cellpadding="3" width="80%" align="center">
<tr>

<tr>
 <td colspan="1" valign="top" align="left">
  <h4 align="justify"><b>Passo 3: Seven_Segment_LED macro:</b></h4>
Il macro seguente usa il macro precedente <nobr>&quot;SS7_Element(...)&quot;!</nobr>
<pre><b>//--------------------------------------------
#macro Seven_Segment( SS_Number,
                      SS_Angle,
                      SS_Background_Scale,
                      SS_Light_Color,
                      SS_Shade_Color,
                      SS_Background_Color,
                    ) //----------------------
//--------------------------------------------
#local SS_Len = 6.2;
#local D = 0.0001;  // just a little bit !!
#local Shear_Factor =  tan(radians(SS_Angle));
//--------------------------------------------
// La sequenza degli elementi:
//      -       1
//    /  /   6    2
//     -        7
//  /  /     5    3
//   -          4
//--------------------------------------------
#switch (SS_Number)
#case(0)
 #local Lights_On = array [7] {1,1,1,1,1,1,0}
#break
#case(1)
 #local Lights_On = array [7] {0,1,1,0,0,0,0}
#break
#case(2)
 #local Lights_On = array [7] {1,1,0,1,1,0,1}
#break
#case(3)
 #local Lights_On = array [7] {1,1,1,1,0,0,1}
#break
#case(4)
 #local Lights_On = array [7] {0,1,1,0,0,1,1}
#break
#case(5)
 #local Lights_On = array [7] {1,0,1,1,0,1,1}
#break
#case(6)
 #local Lights_On = array [7] {1,0,1,1,1,1,1}
#break
#case(7)
 #local Lights_On = array [7] {1,1,1,0,0,0,0}
#break
#case(8)
 #local Lights_On = array [7] {1,1,1,1,1,1,1}
#break
#case(9)
 #local Lights_On = array [7] {1,1,1,1,0,1,1}
#break
#else // nothing - all off!!!
 #local Lights_On = array [7] {0,0,0,0,0,0,0}
#break
#end //  end of switch for arrays
//---------------------------------------
#macro Light_Color(Num)
#if(Lights_On[Num] = 1)  SS_Light_Color
#else                    SS_Shade_Color
#end
#end //--------------------- end of macro
union{

 union{
 object{ S7_Element( Light_Color(1-1)) <br>
         translate&lt;0,0, SS_Len> }
 object{ S7_Element( Light_Color(7-1))
         translate&lt;0,0, 0> }
 object{ S7_Element( Light_Color(4-1))
         translate&lt;0,0,-SS_Len> }

 object{ S7_Element( Light_Color(2-1))
         rotate&lt;0,90,0>
         translate&lt; SS_Len/2,0, SS_Len/2&gt;}
 object{ S7_Element( Light_Color(3-1))
         rotate&lt;0,90,0>
         translate&lt; SS_Len/2,0,-SS_Len/2&gt;}
 object{ S7_Element( Light_Color(6-1))
         rotate&lt;0,90,0>
         translate&lt;-SS_Len/2,0, SS_Len/2&gt;}
 object{ S7_Element( Light_Color(5-1))
         rotate&lt;0,90,0>
         translate&lt;-SS_Len/2,0,-SS_Len/2&gt;}
 //*)
 } // end LEDs
box{ &lt;-SS_Len/2,-0.01     ,-SS_Len&gt;,
     &lt; SS_Len/2,-0.0000001, SS_Len&gt;
     scale SS_Background_Scale
     texture {SS_Background_Color}}
translate&lt;0,D,0&gt;
} // end of union
#end //---------------------- end of macro
//----------------------------------------

#declare Active_Texture =  // red
  texture{
    pigment{ color rgb&lt; 1,0,0&gt;*1.2}
    finish { ambient .9 diffuse .1 phong 1}
  } // end of texture
#declare Inactive_Texture =  // gray
  texture{
    pigment{ color rgb&lt;1,1,1&gt;*0.3}
    finish { phong 1 reflection 0.00}
  } // end of texture
#declare Background_Texture =  // ~black
  texture{
    pigment{ color rgb&lt;1,1,1&gt;*0.05}
    finish { phong 1 reflection 0.10}
  } // end of texture


//----------------------------------------
//----------------------------------------
object{
  Seven_Segment(
    9, // 0~9, integer !!! SS_Number,
    0, // 0~10, SS_Angle for shearing,
    &lt; 1.5, 10, 1.40&gt;, // SS_Background_Scale,
    // &lt; 1.70, 10, 1.40&gt;, //for SS_Angle=10
    Active_Texture, // SS_Light_Color,
    Inactive_Texture, //SS_Shade_Color,
    Background_Texture, //SS_Background_Color,
  ) //------------------------------------
    scale 0.1
    rotate&lt; 0,0,0&gt;
    translate&lt;0,0.05,0&gt; }
//----------------------------------------


</b></pre> </td>
 <td colspan="1" valign="top">
 <h5 align="center">
 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="electronic/Seven_Segment_1_9.jpg" width="240" height="320"
          alt="Seven_Segment_LCD" title="Seven_Segment_LCD"></td></tr>
 </table>Display a cristalli liquidi a sette segmenti</h5>
<h4><b>Passo Addizionale:<br>
 &nbsp; &nbsp; &nbsp;Scorrimento elastico dei sette segmenti</b></h4>
<p align="justify">
Per questo dobbiamo inserire nel macro alla marca &quot;//*)&quot;<br>
una matrice di scorrimento elastico:
<pre><b> matrix&lt; 1,  0,  0, // matrix-shear_z_to_x
         0,  1,  0,
     Shear_Factor, 0,  1,
         0,  0,  0 &gt;
</b></pre>
ma poi dobbiamo adattare la scala del fondo con <br>
<pre><b>&lt; 1.70, 10, 1.40&gt;</b></pre>
 <h5 align="center">
 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="electronic/Seven_Segment_2_9.jpg" width="240" height="320"
          alt="Seven_Segment_LCD" title="Seven_Segment_LCD"></td></tr>
 </table>Scorrimento elastico dei sette segmenti</h5>
 Adesso siamo sicuro in grado di fare un LCD che posso anche presentare altri simboli non-numerici molto importanti:
 <h5 align="center">
 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="electronic/Seven_Segment_Lo.jpg" width="256" height="256"
          alt="Seven_Segment_LCD" title="Seven_Segment_LCD"></td></tr>
 </table>Un 7 segment LCD tipo Lo. :-)</h5>

<br>
<br>
<br>
 <h5 align="center">Descizione della scena per <br> un singolo display a cristalli liquidi<br> a sette segmenti<br> per POV-Ray: <br>
 <a href="electronic/Seven_Segment_9.txt">&quot;Seven_Segment_9.txt&quot;</a> o <br>
 <a href="electronic/Seven_Segment_9.pov">&quot;Seven_Segment_9.pov&quot;</a></h5>
</p>
<br>
<br>
Allora, tocca a lei fare un display con pi&ugrave; di cifre e con una apparenza pi&ugrave; perfetta come questo:
 <h5 align="center">
 <table align="center" border="5" bgcolor="#EFEFEF"
        bordercolor="#c0c0c0" bordercolordark="#808080"  bordercolorlight="#ffffff">
 <tr><td><img src="electronic/Seven_Segment_LCD_1.jpg" width="240" height="180"
          alt="Seven_Segment_LCD" title="Seven_Segment_LCD"></td></tr>
 </table>Un display a sette segmenti LCD<br> con 4 cifre e punti.</h5>
</td>
</tr>
<tr><td colspan="2">
 <h5><b>Oggetti pronto per l'uso per POV-Ray</b><br>
  come Archivi include con archivi esempio <br>
  si trova su la <a href="../objects/obj_000i.htm">Paggina POV-Ray Objects<b></a>.
</td>
</tr>
</table>
</div>

</td></tr>
<tr>
<td valign="middle" align="center"><a href="#top">top</a>
</td></tr></table>
</div>
<!-- footer -->
<hr size="3">
<table width="95%" align="center"><tr>
<td>
<i><font size="-1">&copy; Friedrich A. Lohm&uuml;ller, 2011<br>
   <a href="http://www.f-lohmueller.de" target="_blank"><nobr>http://www.f-lohmueller.de</nobr></i></a>
 <!-- COUNTERSTART -->
 <script language="JavaScript" type="text/javascript" src="../../pphlogger.js"></script>
 <noscript><img alt="" src="http://www.counterbox.de/counter/pphlogger.php?id=flohmuller&st=img"></noscript>
 <!-- COUNTERENDE -->
 </font>
</td>
</tr></table><!-- end footer -->
</body>
</html>
