// PoVRay 3.6 / 3.7 Scene File "truck0_1.pov"
// author:  Friedrich A. Lohmueller, March-2006/Aug-2009/Jan-2011
// email: Friedrich.Lohmueller_at_t-online.de
// homepage: http://www.f-lohmueller.de
//--------------------------------------------------------------------------
#version 3.6; // 3.7;
global_settings{ assumed_gamma 1.0 }
#default{ finish{ ambient 0.1 diffuse 0.9 }} 
//--------------------------------------------------------------------------
#include "colors.inc"
#include "textures.inc"
#include "glass.inc"
#include "metals.inc"
#include "golds.inc"
#include "stones.inc"
#include "woods.inc"
#include "shapes.inc"
#include "shapes2.inc"
#include "functions.inc"
#include "math.inc"
#include "transforms.inc"
//--------------------------------------------------------------------------
// camera ------------------------------------------------------------------
#declare Camera_0 = camera {/*ultra_wide_angle*/ angle 65     // front view
                            location  < 0.00, 1.00,-10.00>
                            right     x*image_width/image_height
                            look_at   <-0.00, 0.50+1, 0.00>}
#declare Camera_1 = camera {/*ultra_wide_angle*/ angle 90   // diagonal view
                            location  <2.0 , 2.5 ,-3.0>
                            right     x*image_width/image_height
                            look_at   <0.0 , 1.0 , 0.0>}
#declare Camera_2 = camera {/*ultra_wide_angle*/ angle 90 // right side view
                            location  <3.0 , 1.0 , 0.0>
                            right     x*image_width/image_height
                            look_at   <0.0 , 1.0 , 0.0>}
#declare Camera_3 = camera {/*ultra_wide_angle*/ angle 90        // top view
                            location  <0.0 , 3.0 ,-0.001>
                            right     x*image_width/image_height
                            look_at   <0.0 , 1.0 , 0.0>}
camera{Camera_0}
// sun ---------------------------------------------------------------------
light_source{<1500,2500,-2500> color White}

// sky -------------------------------------------------------------- 
plane{<0,1,0>,1 hollow  
       texture{ pigment{ bozo turbulence 0.92
                         color_map { [0.00 rgb <0.20, 0.20, 1.0>*0.9]
                                     [0.50 rgb <0.20, 0.20, 1.0>*0.9]
                                     [0.70 rgb <1,1,1>]
                                     [0.85 rgb <0.25,0.25,0.25>]
                                     [1.0 rgb <0.5,0.5,0.5>]}
                        scale<1,1,1.5>*2.5  translate< 0,0,0>
                       }
                finish {ambient 1 diffuse 0} }      
       scale 10000}
// fog on the ground -------------------------------------------------
fog { fog_type   2
      distance   50
      color      White  
      fog_offset 0.1
      fog_alt    1.5
      turbulence 1.8
    }

// ground ------------------------------------------------------------
plane { <0,1,0>, 0 
        texture{ pigment{ color rgb<0.35,0.65,0.0>*0.72 }
	         normal { bumps 0.75 scale 0.015 }
                 finish { phong 0.1 }
               } // end of texture
      } // end of plane
//--------------------------------------------------------------------------
//---------------------------- objects in scene ----------------------------
//--------------------------------------------------------------------------





//-------------------------------------------------------------------------------------// 
#include "Street_10.inc"  // street with center stripes with continuous border lines
//-------------------------------------------------------------------------------------// 
object{ Street_10( 4,     // Street_Widthm, // 
                   1000 , // Street_Length, //
                   0.10,  // Stripes_Width, // 
                   1.00,  // Stripes_Length                                  
                 ) //------------------------------------------------------------------//
        scale <1,1,1>*1
        rotate<0,90,0> 
        translate<-500.00,0.00,0.00>}
//-------------------------------------------------------------------------------------// 
//---------------------------------------------------------------------------------------


// in x+ Richtung!!!!

//-----------------------------------------
//-----------------------------------------
//-----------------------------------------
//---------------------------- object Wheel 
#local Wheel = 
union{ 
 intersection{
  torus{ 0.35,0.15  rotate<90,0,0> }
  cylinder{ <0,0,-0.20>,<0,0,0.20>, 0.47}
 
  texture{ pigment{ color rgb<1,1,1>*0.15}
           normal { bumps 0.5 scale 0.005}  
           finish { diffuse 0.9 phong 0.2}
         } // end of texture
 }// end intersection
 sphere{ <0,0,0>,0.45 scale<1,1,0.25> 
          texture { 
            Chrome_Metal 
            normal{ bumps 0.5 scale 0.005}  
            finish{ diffuse 0.9 phong 0.5}
          } // end of texture
 } // end of sphere -----------------------

translate<0,0.45,0>
} // end of union ----- end of object Wheel 
//-----------------------------------------
//-----------------------------------------
//-----------------------------------------

#local Half = 1.00; // Halbe Spurweite
#local Axis_Distance = 3.50;
//--------------------------------------------
//--------------------------------------------
#local Wheel_D= //------------- double wheel
union{ 
object{ Wheel translate<0,0,-0.15>} 
object{ Wheel translate<0,0, 0.15>} 
} //------------------------------------------

#local Double_Axes = //--------- double_Axes 
union{ 
object{ Wheel_D translate<-0.60,0,-Half>} 
object{ Wheel_D translate<-0.60,0, Half>} 
object{ Wheel_D translate<+0.60,0,-Half>} 
object{ Wheel_D translate<+0.60,0, Half>} 
} //------------------------------------------



//--------------------------------------------
#macro Chassis (Front_Wheel___Angle)  
//------------------------------------ Chassis
union{
object{ Wheel rotate<0,Front_Wheel___Angle,0> 
        translate<0,0,-Half>} 
object{ Wheel rotate<0,Front_Wheel___Angle,0> 
        translate<0,0, Half>} 
object{ Double_Axes 
        translate<-Axis_Distance,0,0>} 
object{ Round_Box( //-------------------------
        <-Axis_Distance-1,  0,-0.5>,
        <            0.25,0.5, 0.5>, 0.025, 0)  
        texture{ pigment{ color rgb 0.2}
                 finish { diffuse .9 phong .1}
                 }
        translate<0,0.40,0>
      } // -----------------------------------
// trailer linking point
cylinder{ <0,0,0>,<0,0.15,0>,0.25 
          translate<-Axis_Distance,0.8,0>
          pigment{ color rgb 0.3} }
} // end of union  ------------ end of Chassis 
#end // --------------------------------------
 



#local BHW = 1.10; //body half width 
#local FH = 1.10; // front height 
#local Front_Over = 0.80; // 
#local BL  = 1.60; // body length
#local BH = 2.00; // body height
#local Top_Length  = 1.00; // 
#local BR = 0.10; // border radius

//--------------------------------// Body - Karosserie
#macro Body (Car___Texture)
union{  // with glass
difference{ // cave out the window holes etc.
union{ //-------------------------- positive parts
object{ Round_Box(
         <-BL,         0,-BHW>,
         < Front_Over,FH, BHW>, BR, 0)  
      } // --------------------------------------------
object{ Round_Box(
         <-BL,         0.01,-BHW>,
         <-BL+Top_Length,BH, BHW>, BR, 0)  
      } // --------------------------------------------
} // end of union positve parts 
 // ---------------------------------------------------
// inside caved out
object{ Round_Box(
         <-BL+0.01,              0.01,-BHW+0.01>,
         <-BL+Top_Length-0.01,BH-0.01, BHW-0.01>, BR,0)  
          
      } // --------------------------------------------
// side Windows: 
object{ Round_Box(
         <-BL+BR,             FH,-BHW-0.01>,
         <-BL+Top_Length-BR,BH-BR, BHW+0.01>, 0.10, 0)  
         
      } // ---------------------------------------------
// front Windows: 
object{ Round_Box(
         <-BL+0.1,            FH+BR,-BHW+BR>,
         <-BL+Top_Length+2*BR, BH-BR, BHW-BR>, 0.10, 0)  
      } // ---------------------------------------------
// hole for front wheels: 
cylinder{ <0,0,-BHW-0.01>,
          <0,0, BHW+0.01>, 0.60 
        } // end of cylinder  --------------------------

texture{ Car___Texture}
}// end of difference ----------------------------------

// inside in glass ---- with "merge on"!!!!
object{ Round_Box(
        <-BL+0.005,          BR+0.005,-BHW+0.005>,
        <-BL+Top_Length-0.01,BH-0.005, BHW-0.005>,BR,1)  
        texture{ pigment{ rgbf <0.98, 0.98, 0.98, 0.9>}
                 finish { diffuse 0.1 reflection 0.2  
                          specular 0.8 roughness 0.0003 
                          phong 1 phong_size 400}
       } // end of texture -------------------------
      } // -----------------------------------------------
} #end // ------------------------------------ end of Body
//--------------------------------------------------------
 
#local Trailer_Length = 7.00; 
#local Trailer_Height = 2.20; 
#local Trailer_Half_Width = 1.20;

#macro Trailer( TrailerBody___Texture) //--------- Trailer
union{ 
object{ Round_Box(
        <-Trailer_Length,0,-Trailer_Half_Width>,
        <0,Trailer_Height,Trailer_Half_Width>, BR, 0)  
        translate<0,0.95,0>
      } // -----------------------------------------------
object{ Double_Axes
        translate<-Trailer_Length+1.60,0,0>  
      } // ----------------------------------------------- 
object{ Round_Box(<-1.5,0,-0.5>,<1.5,0.50, 0.5>, 0.025, 0)  
        texture{ pigment{ color rgb<1,1,1>*0.2}
                 finish { diffuse 0.9 phong 1}
               }
         translate<-Trailer_Length+1.60,0.5,0>
       } // ---------------------------------------------- 

texture{ TrailerBody___Texture }
}// end of union 
#end //------------------------------------ end of Trailer
//-------------------------------------------------------- 
//-------------------------------------------------------- 
//---------------------------------------------------------- 
#macro Truck0( Wheel___Angle, // Front wheel angle: ~  +/-60
               Trailer___Angle, // Trailer angle:   ~ +/-110
               Truck___Texture 
             ) //------------------------------------------- 
union{ 
object{ Chassis (Wheel___Angle) }

object{ Body(Truck___Texture) translate<0,0.45,0>} 

object{ Trailer(Truck___Texture) 
        translate<+1.2,0,0> 
        rotate<0,Trailer___Angle,0> 
        translate<-Axis_Distance,0,0> }

} // end of union
#end // end of macro ------------------------ end of Truck0 
//---------------------------------------------------------- 
//---------------------------------------------------------- 
//---------------------------------------------------------- 
//---------------------------------------------------------- 
//---------------------------------------------------------- 



//---------------------------------------------------------
#declare Trailer_Angle = 0; //  ~ +/-110
#declare Wheel_Angle   = 0; // ~  +/-60
#declare Truck_Texture =  
   texture{ pigment{ color rgb<1,1,1>*1.1}
            finish { diffuse 0.9 phong 1}
          }
//----------------------------------------
//---------------------------------------------------------
object{ Truck0( Wheel_Angle, // Front wheel angle: ~  +/-60
                Trailer_Angle, // Trailer angle:   ~ +/-110
                Truck_Texture 
              ) //-----------------------------------------
rotate<0,0,0> translate<4.20,0,0>}
//--------------------------------------------------------- end







