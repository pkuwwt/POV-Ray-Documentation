<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
<title>POV-Ray Beispiele, Erstellung von Objekten f&uuml;r POV-Ray</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta http-equiv="language" content="de">
<meta name="robots" content="index">
<meta name="robots" content="follow">
<meta name="Author" content="Friedrich A. Lohmueller">
<meta name="copyright" content="Copyright 2009, Friedrich A. Lohmueller - all rights reserved worldwide">
<meta name="description" content="POV-Ray Beispiele, Erstellung von Objekten f&uuml;r POV-Ray">
<meta name="keywords" content="POV, POVRAY, POV-Ray, Raytracing, 3D-Grafik, 3D Graphik, Computergraphik, POV-Ray Objects, Fertige Objekte f&uuml;r POV-Ray">
<link rel="stylesheet" type="text/css" href="../lo1style.css">
<SCRIPT LANGUAGE=JavaScript>
<!--
function ShowImage(ImageHtml) {
 New=window.open(ImageHtml, "PictureWin", "status=0,scrollbars=0,resizable=1,width=635,height=495");
 New.focus();  }
//-->
</SCRIPT>
<SCRIPT LANGUAGE=JavaScript>
<!--
function ShowImage2(ImageHtml) {
 New=window.open(ImageHtml, "PictureWin", "status=0,scrollbars=0,resizable=1,width=695,height=525");
 New.focus();  }
//-->
</SCRIPT>
</head>

<body bgcolor="#d8d8d0" text="#505030" link="#006677" vlink="#445566" alink="#cc0055">

<table width="100%" border="0"><tr>
 <td valign="top"><h6><nobr>Beschreibungen und Beispiele zum Raytracer POV-Ray</nobr>
                  <nobr>von Friedrich A. Lohm&uuml;ller</nobr>
 <hr size="3">
 <div align="center">
      <font size="5"> &nbsp; &nbsp; <b>POV-Ray Beispiele</b></font> -
      <font size="-1"><b>Die Erstellung von Objekten f&uuml;r POV-Ray</b></font></div>
 </td></h6>
 <td align="right">
        <a href="tec_731e.htm"><font size="2">English </font><img src="flag_uk.gif" border="0" width="22" height="15" alt="English" titel="English"</a></nobr>
        <a href="tec_731e.htm"><img src="flag_usa.gif" border="0" width="22" height="15" alt="English" titel="English"></a><br>
        <a href="tec_731i.htm"><font size="2">Italiano</font></a>
        <a href="tec_731i.htm"><img src="flag_ita.gif" alt="Italiano" title="Italiano"align="bottom" width="22" height="15" border="0"></a><br>
        <a href="tec_731f.htm"><font size="2">Fran&ccedil;ais</font></a>
        <a href="tec_731f.htm"><img src="flag_fra.gif" alt="fran&ccedil;ais" title="fran&ccedil;ais"align="bottom" width="22" height="15" border="0"></a><br>
    </td>
</tr></table><a name="start"></a><hr size="3">
<table border="0" width="100%" cellspacing="5">  <!--- global table -->
<tr><td valign="top"> <!-- Index -->
<font size="2">
 <a href="../../index_d.htm">Home</b></a><br>
 - <a href="../pov__ger.htm"><nobr>POV-Ray Tutorial</nobr></b></a><br>
<br>
 &nbsp;&nbsp;- <a href="sam_000d.htm">POV-Ray Beispiele</b></a><br>
 &nbsp; &nbsp; &nbsp;<a href="sam_000d.htm">Inhalts&uuml;bersicht</b></a><br>
&nbsp; -  <a href="sam_300d.htm">Geometrie</b></a><br>
&nbsp; -  <a href="sam_100d.htm">Architektur</b></a><br>
&nbsp; -  <a href="tec_000d.htm">Technik</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_750d.htm">Leiter</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_700d.htm">Masten</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_710d.htm">Gel&auml;nder</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_720d.htm">Br&uuml;cke</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_730d.htm">R&ouml;hren</b></a><br>
 &nbsp; &nbsp; -  <!--a href="tec_731d.htm"--><b>Rohr-Abzweigung</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_732d.htm">Rohr-Absperrhahn</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_400d.htm">Kette</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_450d.htm">Drahtspule</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_500d.htm">Torpedo</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_600d.htm">Cruise Missile</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_900d.htm">Rakete</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_190d.htm">Rad</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_100d.htm">Truck</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_850d.htm">Propeller</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_800d.htm">Flugzeug</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_550d.htm">Kanu</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_050d.htm">Gitarrenbody</b></a><br>
 <nobr>&nbsp; &nbsp; -  <a href="tec_010d.htm">7-Segment Display</b></a></nobr><br>
 &nbsp; &nbsp; -  <a href="tec_020d.htm">Flachbandkabel</b></a><br>
 &nbsp; &nbsp; -  <a href="tec_030d.htm">Kabelbaum</b></a><br>
<!--&nbsp; &nbsp; -  <a href="sam_000d.htm">Schiffe</b></a><br>
    &nbsp; &nbsp; -  <a href="sam_000d.htm">Eisenbahn</b></a><br>-->

 <nobr> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
       &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </nobr>
</font>


</td><td valign="top" rowspan="2" align="left"> <!-- Content - 2nd column -->
<a name="Top"></a>



<table cellpadding="5" width="80%" align="center">
<tr>
 <td align="center" valign="top">&nbsp;<br>
   <table align="center" border="4"  bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td><a href="javascript:ShowImage2('tubes/tube_fork_000_1im.htm')"
                 onmouseover="window.status='ShowSingleImage';return true"
                 onmouseout="window.status=''">
              <img src="tubes/Tube_Fork_000_6s.jpg" width="160" height="120" border="0"
                   alt="Tube fork" title="Tube fork"></a></td>
    </tr></table><br>

  </td>
 <td align="left" valign="top">
  <p align="justify"><font size="6"><nobr><b>Rohr-Abzweigung</b></nobr></font><br>
   <h6>Objekte:  isosurface, cylinder.<br>
       Methoden: #declare, #local, #macro, union, difference.</h6>
 <h5 align="justify">Die Grundforn einer Rohrverzweigung zum Verbinden von Pipelines,
 f&uuml;r einen Wasserhahn oder f&uuml;r einen Absperrhahn. <br>
  </td></h5>
</tr>
<tr><td colspan="2"><hr></td></tr>
</table>


<table border="0" align="center" cellpadding="4">
<tr>
 <td valign="top">
 Wir betrachten zun&auml;chst zwei <b>blob-&auml;hnliche Isosurfaces.</b> (&Auml;quipotentialfl&auml;chen)<br>
Die Abmessungen f&uuml;r beide:
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b>#local R1 = 0.50; // tube radius
#local R2 = 0.35; // blob sphere radius
#local Box_L = 4*R1; // size of container box &nbsp; &nbsp;&nbsp;
#local Bloby = 0.15, // the blob factor</b></td></pre></tr></table>
First an isosurface tube with spherical blob:
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td>
<pre><b>isosurface{ //-----------------------------------
function{ (1+Bloby)
           - pow( Bloby,(sqrt(x*x+y*y)-(R1)))
           - pow( Bloby,(sqrt(y*y+z*z+x*x)-(R2)))
        } // end function
 contained_by{
  box{&lt;-Box_L,-Box_L,-Box_L&gt;,&lt;Box_L,Box_L,Box_L&gt;}}
 accuracy 0.001
 max_gradient 7
 texture{ pigment{ color rgb&lt;0.45,1,0&gt;}
          finish { phong 1 reflection 0.10}}
} // end of isosurface --------------------------</b></td></pre></tr></table>
</td>

<td valign="top">

  <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_1.jpg" border="0" width="320" height="240"
   alt="nuts" title="nuts"></td>
  </tr></table>Ein Isosurface-Rohr mit einem kubelf&ouml;rmigen Blob.</h6>


</td>
</tr>
<tr>
 <td valign="top">
Dann ein Isosurface aus sich kreuzenden R&ouml;hren:
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td><pre><b>isosurface{ //-----------------------------------
 function{ (1+Bloby)
            - pow( Bloby,(sqrt(x*x+y*y)-(R1)))
            - pow( Bloby,(sqrt(y*y+z*z)-(R2)))
         } // end function
 contained_by{
  box{&lt;-Box_L,-Box_L,-Box_L&gt;,&lt;Box_L,Box_L,Box_L&gt;}}
 accuracy 0.001
 max_gradient 7
 texture{ pigment{ color rgb&lt;1,0.7,0&gt;}
          finish { phong 1 reflection 0.10}}
} // end of isosurface --------------------------</b></td></pre></tr></table>
</td>

<td valign="top">

  <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_2.jpg" border="0" width="320" height="240"
   alt="cross" title="cross"></td>
  </tr></table>Ein Isosurface aus sich kreuzenden R&ouml;hren.</h6>


</td>
</tr>

<tr><td colspan="2"><hr size="3"></td></tr>

<tr>
 <td valign="top">
Wie man eine <b>Rohr-Abzweigung</b> machen kann:<br>
Hierbei schr&auml;nken wir bei jedem der beiden Isosurfaces ihre Containerbox auf jeweils verschieden H&auml;lften ein
und dann addieren wir sie zusammen unter Verwendung von &quot;union&quot;.
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td><pre><b>union{
isosurface{ //-----------------------------------
function{ (1+Bloby)
           - pow( Bloby,(sqrt(x*x+y*y)-(R1)))
           - pow( Bloby,(sqrt(y*y+z*z+x*x)-(R2)))
        } // end function
 contained_by{
  box{&lt;-Box_L,-Box_L,-Box_L&gt;,&lt0,Box_L,Box_L&gt;}}
 accuracy 0.001
 max_gradient 7
 texture{ pigment{ color rgb&lt;0.45,1,0&gt;}
          finish { phong 1 reflection 0.10}}
} // end of isosurface 1 ------------------------

 function{ (1+Bloby)
            - pow( Bloby,(sqrt(x*x+y*y)-(R1)))
            - pow( Bloby,(sqrt(y*y+z*z)-(R2)))
         } // end function
 contained_by{
  box{&lt;0,-Box_L,-Box_L&gt;,&lt;Box_L,Box_L,Box_L&gt;}}
 accuracy 0.001
 max_gradient 7
 texture{ pigment{ color rgb&lt;1,0.7,0&gt;}
          finish { phong 1 reflection 0.10}}
} // end of isosurface 2 ------------------------

} // end of union</b></td></pre></tr></table>
</td>
<td valign="top">

 <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_3.jpg" border="0" width="320" height="240"
   alt="cross" title="cross"></td>
  </tr></table>Two half isosurface shapes.</h6>

 <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_4.jpg" border="0" width="320" height="240"
   alt="cross" title="cross"></td>
  </tr></table>The isosurface of forked tube.</h6>


</tr>
<tr><td colspan="2"><hr size="3"></td></tr>
<tr>
 <td valign="top">
<b>Anpassung der Rohr-Abzeigung</b> zum Verbinden mit anderen Rohren: <br>
Weil Isosurface-Formen dieser Art nicht genau den Radius R1 bzw. R2 an den Grenzen
ihrer Containerboxen haben mu&szlig; man einen Korrekturwert zum jeweiligen Radius hinzuaddieren.<br>
<font size="-1">(Dieser ist nicht exakt berechnet - man verwendet hier am bestem die Methode von &quot;Versuch und Irrtum&quot;!)</font><br>
Anmerkung: <font size="-1">Wenn man die Rohrradien ver&auml;ndert, dann wird man <br>
       diesen Korrekturwert entsprechend anpassen m&uuml;ssen! </font><br>
<br>
Um die Anpassung der Radien des Isosurfaces an externe Rohrradien zu erleichtern sind hier Test-Zylindern zus&auml;tzlich
ein- und ausschaltbar (Test_Cylinders_ON = 1 oder 0) hinzugef&uuml;gt.<br>

<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td><pre><b>#local Cor = 0.06; isosuface radius correction
#local Test_Cylinders_ON = 1; // 1 = on; 0 = off
//-----------------------------------------------
union{
isosurface{ //-----------------------------------
 function{ (1+Bloby)
       - pow( Bloby,(sqrt(x*x+y*y)-(R1+Cor)))
       - pow( Bloby,(sqrt(y*y+z*z+x*x)-(R2+Cor)))
         } // end function
 contained_by{
  box{&lt;-Box_L,-Box_L,-Box_L&gt;,&lt0,Box_L,Box_L&gt;}}
 accuracy 0.001
 max_gradient 7
 texture{ pigment{ color rgb&lt;0.45,1,0&gt;}
          finish { phong 1 reflection 0.10}}
} // end of isosurface 1 ------------------------

 function{ (1+Bloby)
           - pow( Bloby,(sqrt(x*x+y*y)-(R1+Cor)))
           - pow( Bloby,(sqrt(y*y+z*z)-(R2+Cor)))
         } // end function
 contained_by{
  box{&lt;0,-Box_L,-Box_L&gt;,&lt;Box_L,Box_L,Box_L&gt;}}
 accuracy 0.001
 max_gradient 7
 texture{ pigment{ color rgb&lt;1,0.7,0&gt;}
          finish { phong 1 reflection 0.10}}
} // end of isosurface 2 ------------------------
// ----------------------------------------------
#if(Test_Cylinders_ON=1)
 union{ // test
  cylinder{&lt;0,0,Box_L&gt;,&lt;0,0,Box_L+0.5*R1&gt;,R1}
  cylinder{&lt;0,0,-Box_L-0.5*R1&gt;,&lt;0,0,-Box_L&gt;,R1}
  cylinder{&lt;Box_L,0,0&gt;,&lt;Box_L+0.5*R1,0,0&gt;,R2}
  texture{  pigment{ color rgb&lt;1,0.7,0&gt;} }
 } // end of union 'test'
#end // of Test_Cylinders_ON
} // end of union -------------------------------</b></td></pre></tr></table>
</td>
<td valign="top">
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

  <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_5.jpg" border="0" width="320" height="240"
   alt="tube fork with test cylinders" title="tube fork with test cylinders"></td>
  </tr></table>Die Rohr-Abzweigung mit Test-Zylindern</h6>


</tr>
<tr><td colspan="2"><hr size="3"></td></tr>
<tr>
<td>Aush&ouml;hlen des Innern und Einf&uuml;gen des ganzen in ein Makro<br>
vervollst&auml;ndigt die Rohr-Abzweigung:<br>
Das Makro <b>&quot;Tube_Fork_000&quot;</b>:
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td><pre><b>//---------------------------------------------
#macro Tube_Fork_000 (
    R1, // ~0.50,
    R2, // ~0.35 ~0.65,
    Tube_D, // ~0.05, tube material thickness
    Bloby, // blob factor, // 0.1~0.002,
    Cor, //   radius correction,
    Test_Cylinders_ON, // on = 1; off = 0,
  ) // ----------------------------------------
//---------------------------------------------
#local D = 0.0001; // just a little bit !!!
#local Box_L = 4*R1;
//---------------------------------------------
//------------- default textures --------------
#ifndef (Slide_Body_Texture)
#declare Slide_Body_Texture =
 texture{ pigment{ color rgb&lt;1,1,1&gt;*0.85}
          normal { bumps 0.05 scale 0.3005}
          finish { phong 0.7 reflection 0.05}}
#end
#ifndef (Slide_Inside_Texture)
#declare Slide_Inside_Texture =
 texture{ pigment{ color rgb&lt;1,1,1&gt;*0.7}}
#end
#ifndef (Test_Tube_Texture)
#declare Test_Tube_Texture =
  texture { pigment { color rgb&lt;0.7,0.3,1&gt;}}
#end
//-----------....----------- main part --------
union{ // main union

#if(Test_Cylinders_ON=1)
union{ // 1
#end

difference{
 union{
 isosurface{ //--------------------------------
  function{
    (1+Bloby)
    - pow( Bloby, ( sqrt(x*x+y*y)-(R1+Cor) ) )
    - pow( Bloby,( sqrt( y*y+z*z)-(R2+Cor) ) )
  }// end function
  contained_by{
   box{&lt;0,-Box_L,-Box_L&gt;,&lt;Box_L,Box_L,Box_L&gt;} }
  accuracy 0.001
  max_gradient 7
 } // end of isosurface -----------------------

 isosurface{ //--------------------------------
  function{
    (1+Bloby)
    - pow( Bloby, ( sqrt(x*x+y*y)-(R1+Cor) ) )
    - pow( Bloby,( sqrt(y*y+z*z +x*x)-(R2+Cor) ) )
  }// end function
  contained_by{
   box{&lt;-Box_L,-Box_L,-Box_L&gt;,&lt;0,Box_L,Box_L&gt;}}
  accuracy 0.001
  max_gradient 7
 } // end of isosurface -----------------------

 texture{Slide_Body_Texture}
 }// end of union

 cylinder{ &lt;0,0,-Box_L-D&gt;,&lt;0,0,Box_L+D&gt;,R1-Tube_D
           texture{ Slide_Inside_Texture }}
 cylinder{ &lt;0,0,0&gt;,&lt;Box_L+D,0,0&gt;, R2-Tube_D
           texture{ Slide_Inside_Texture }}
}//end of difference  //

#if(Test_Cylinders_ON=1)
 union{ // 'test'
  cylinder{&lt;0,0, Box_L&gt;,&lt;0,0,Box_L+0.5*R1&gt;, R1}
  cylinder{&lt;0,0,-Box_L-0.5*R1&gt;,&lt;0,0,-Box_L&gt;,R1}
  cylinder{&lt;Box_L,0,0&gt;,&lt;Box_L+0.5*R1,0,0&gt;,  R2}
  texture { Test_Tube_Texture }}
 }// end union 'test'
} // end union of '#if(Test_Cylinders_ON = 1)'
#end // Test_Cylinders_ON=1
// ---------

} // end union main
#end // -------------------------- end of macro</b></td></pre></tr></table>
<br>
Und hier ist ein einfaches Muster daf&uuml;r <b>wie man dieses Makro verwendet</b>:<br>
<table border="1"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#FFFFFF"  bordercolorlight="#808080">
  <tr><td><pre><b>// -------------------------- optional textures &nbsp;
#declare Slide_Body_Texture =
  texture{ pigment{ color rgb&lt;0.75,1,0&gt;}
           finish { phong 1 reflection 0.1}}
#declare Slide_Inside_Texture =
  texture{ pigment{ color rgb&lt;0.3,0.7,0&gt;*1.1}
           finish { phong 1}}
#declare Test_Tube_Texture =
  texture{ pigment { color rgb&lt;1,0.7,0&gt;}
         } // end of texture
// ----------------------------------------------
object{
  Tube_Fork_000 (
  // total container box length = 4*R1
  0.50, // R1, // main tube radius:  1 ~ 0.25
  0.35, // R2, // side tube radius:  1.5 ~ 0.20
  0.05, // Tube_D, // tube material thickness
  0.15, // Blobfactor; // 0.1~0.002 ; max~0.2!!
  0.06, // radius correction, ~ 0.06
  0, // Test_cylinders_ON;  on = 1; off = 0
  ) // ------------------------------------------
  // rotate &lt;0,0,90&gt;
  translate &lt;0,0,0&gt;
} // --------------------------------------------&nbsp;</b></td></pre></tr></table>
</td>
<td valign="top">
<br>
<br>
<br>
  <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_6.jpg" border="0" width="320" height="240"
   alt="tube fork macro" title="tube fork macro"></td>
  </tr></table>The tube fork macro.</h6>

<br>
 <h5 align="center">Szenenbeschreibung f&uuml;r POV-Ray: <br>
 <a href="tubes/Tube_Fork_000_6.txt">&quot;Tube_Fork_000_6.txt&quot;</a> oder
 <a href="tubes/Tube_Fork_000_6.pov">&quot;Tube_Fork_000_6.pov&quot;</a></h5>
<br>
<br>

  <table align="center" border="3"  bgcolor="#EFEFEF"
  bordercolor="#C0C0C0" bordercolordark="#808080"  bordercolorlight="#FFFFFF">
 <tr><h6 align="center">
 <td align="center">
   <img src="tubes/Tube_Fork_000_6b.jpg" border="0" width="320" height="240"
   alt="tube fork macro" title="tube fork macro"></td>
  </tr></table>Das Tube_Fork-Makro <br>
               mit R1 = 0.35, R2 = 0.50,<br>
               und rotate&lt;0,0,90&gt;.</h6>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

  <table align="center" border="4"  bgcolor="#efefef"
            bordercolor="#c0c0c0" bordercolordark="#ffffff"  bordercolorlight="#808080">
            <tr><td><a href="javascript:ShowImage2('tubes/tube_fork_000_1im.htm')"
                 onmouseover="window.status='ShowSingleImage';return true"
                 onmouseout="window.status=''">
              <img src="tubes/Tube_Fork_000_inc.jpg" width="160" height="120" border="0"
                   alt="Tube Fork" title="Tube Fork"></a></td>
    </tr></table><br>
<br>
 <h5><b>Zum Download</b> dieser Form als ein <nobr><b>Gebrauchsfertige POV-Ray-Objekte</b></nobr> <br> in einer
 Include-Datei als Makro<br>
 und zu Beispiel-Dateien siehe hier: <br>
  <a href="../objects/obj_730d.htm"><nobr>POV-Ray-Objekte - R&ouml;hre</b></nobr></a></td></h5>

</td>

</tr></table>
&nbsp;<br>
<tr>
<td valign="middle" align="center"><a href="#top">top</a>
</td></tr></table>

</div>

<!--Footer  -->
<hr size="3">
<i><font size="-1">&copy; Friedrich A. Lohm&uuml;ller, 2009<br>
   <a href="http://www.f-lohmueller.de" target="_blank"><nobr>http://www.f-lohmueller.de</nobr></i></a>
 <!-- COUNTERSTART -->
 <script language="JavaScript" type="text/javascript" src="../../pphlogger.js"></script>
 <noscript><img alt="" src="http://www.counterbox.de/counter/pphlogger.php?id=flohmuller&st=img"></noscript>
 <!-- COUNTERENDE -->
 </font>
</body>
</html>